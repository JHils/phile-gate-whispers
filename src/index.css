
@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Special+Elite&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 98%;
    --foreground: 240 10% 3.9%;

    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;

    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;

    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;

    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 5% 64.9%;

    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 10% 3.9%;

    --radius: 0.5rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  
  body {
    @apply bg-background text-foreground font-typewriter;
    cursor: default;
  }

  .phile-container {
    @apply max-w-3xl mx-auto px-4 md:px-6;
  }

  .glitch-hover {
    position: relative;
    display: inline-block;
    transition: all 0.3s ease;
  }

  .glitch-hover:hover::before {
    content: attr(data-text);
    position: absolute;
    left: -2px;
    width: 100%;
    background: rgba(255,255,255,0.2);
    text-shadow: 1px 0 red;
    clip: rect(0, 900px, 0, 0);
    animation: glitch-effect 2s infinite linear alternate-reverse;
  }

  @keyframes glitch-effect {
    0% {
      clip: rect(31px, 9999px, 94px, 0);
    }
    5% {
      clip: rect(70px, 9999px, 71px, 0);
    }
    10% {
      clip: rect(29px, 9999px, 43px, 0);
    }
    15% {
      clip: rect(38px, 9999px, 98px, 0);
    }
    20% {
      clip: rect(16px, 9999px, 60px, 0);
    }
    25% {
      clip: rect(61px, 9999px, 17px, 0);  
    }
    30% {
      clip: rect(15px, 9999px, 58px, 0);
    }
    35% {
      clip: rect(75px, 9999px, 93px, 0);
    }
    40% {
      clip: rect(44px, 9999px, 76px, 0);
    }
    45% {
      clip: rect(67px, 9999px, 21px, 0);
    }
    50% {
      clip: rect(89px, 9999px, 25px, 0);
    }
    55% {
      clip: rect(56px, 9999px, 5px, 0);
    }
    60% {
      clip: rect(36px, 9999px, 32px, 0);
    }
    65% {
      clip: rect(51px, 9999px, 13px, 0);
    }
    70% {
      clip: rect(64px, 9999px, 94px, 0);
    }
    75% {
      clip: rect(35px, 9999px, 59px, 0);
    }
    80% {
      clip: rect(73px, 9999px, 76px, 0);
    }
    85% {
      clip: rect(97px, 9999px, 11px, 0);
    }
    90% {
      clip: rect(70px, 9999px, 74px, 0);
    }
    95% {
      clip: rect(28px, 9999px, 25px, 0);
    }
    100% {
      clip: rect(67px, 9999px, 89px, 0);
    }
  }
  
  .coin {
    width: 120px;
    height: 120px;
    perspective: 500px;
    margin: 2rem auto;
  }
  
  .coin-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transform-style: preserve-3d;
  }

  .coin-side {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    border-radius: 50%;
    box-shadow: 0 0 15px rgba(0,0,0,0.2);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    font-weight: bold;
  }
  
  .coin-front {
    background-color: #9F9EA1;
    color: #222;
  }
  
  .coin-back {
    background-color: #8B8B8B;
    color: #333;
    transform: rotateY(180deg);
  }

  /* New animations and styles */
  .static-overlay {
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
  }

  @keyframes text-shake {
    0%, 100% { transform: translate(0, 0); }
    10% { transform: translate(-1px, -1px); }
    20% { transform: translate(1px, 1px); }
    30% { transform: translate(-1px, 1px); }
    40% { transform: translate(1px, -1px); }
    50% { transform: translate(-1px, 0); }
    60% { transform: translate(1px, 0); }
    70% { transform: translate(0, 1px); }
    80% { transform: translate(0, -1px); }
    90% { transform: translate(-1px, 0); }
  }

  .animate-text-shake {
    animation: text-shake 10s ease-in-out infinite;
  }

  .monster-active {
    @apply bg-black;
  }

  .monster-active::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: repeating-linear-gradient(
      0deg,
      rgba(0, 0, 0, 0.1),
      rgba(0, 0, 0, 0.1) 1px,
      transparent 1px,
      transparent 2px
    );
    pointer-events: none;
    z-index: 100;
    animation: scanline 8s linear infinite;
  }

  @keyframes scanline {
    0% {
      transform: translateY(0);
      opacity: 0.2;
    }
    50% {
      opacity: 0.3;
    }
    100% {
      transform: translateY(100vh);
      opacity: 0.2;
    }
  }
}

.text-reveal {
  overflow: hidden;
}

.text-reveal span {
  opacity: 0;
  transform: translateY(20px);
  display: inline-block;
  animation: reveal 1s forwards;
}

@keyframes reveal {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Delayed reveal for each character */
.text-reveal span:nth-child(1) { animation-delay: 0.1s; }
.text-reveal span:nth-child(2) { animation-delay: 0.2s; }
.text-reveal span:nth-child(3) { animation-delay: 0.3s; }
.text-reveal span:nth-child(4) { animation-delay: 0.4s; }
.text-reveal span:nth-child(5) { animation-delay: 0.5s; }
/* Add more as needed */

.tiny-hidden-text {
  font-size: 0.6rem;
  opacity: 0.4;
  transition: all 0.3s ease;
  cursor: pointer;
}

.tiny-hidden-text:hover {
  opacity: 0.8;
}
